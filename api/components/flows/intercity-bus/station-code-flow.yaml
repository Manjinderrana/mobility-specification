summary: InterCity(Bus) - Station Code Based Flow
details: 
  - description: The illustrative flow to perform a transaction of the nature where in a buyer would like to book an intercity service form station A to station B
    mermaid: >-
      sequenceDiagram
        title Inter-city Discovery
        Buyer Platform (BAP)->>Gateway (BG): search
        Gateway (BG) ->> Buyer Platform (BAP): ACK
        Gateway (BG)->>Registry: Lookup Seller Platforms (lookup)
        Registry->>Gateway (BG): List of Seller Platforms (200 OK)
        Gateway (BG)->>Seller Platform (BPP): search
        Seller Platform (BPP)->>Gateway (BG) : ACK
        Seller Platform (BPP)->>Buyer Platform (BAP): Publish Catalog of Seller 1 (on_search)
        Buyer Platform (BAP)->>Seller Platform (BPP): ACK
  - description: Ordering
    mermaid: >-
      sequenceDiagram
        title Selection
        participant Buyer Platform (BAP)
        participant Seller Platform (BPP)
        Buyer Platform (BAP)->>Seller Platform (BPP): select
        Seller Platform (BPP)-->>Buyer Platform (BAP):ACK
        Seller Platform (BPP)->>Buyer Platform (BAP):on_select
        Buyer Platform (BAP)-->>Seller Platform (BPP): ACK
  - description: Initializing the order 
    mermaid: >-
      sequenceDiagram
        title Initializing Order
        participant Buyer Platform (BAP)
        participant Seller Platform (BPP)
        Buyer Platform (BAP)->>Seller Platform (BPP): init
        Seller Platform (BPP)-->>Buyer Platform (BAP):ACK
        Seller Platform (BPP)->>Buyer Platform (BAP):on_init
        Buyer Platform (BAP)-->>Seller Platform (BPP): ACK 
  - description: Order Confirmation 
    mermaid: >-
      sequenceDiagram
        title  Order Confirmation
        participant Buyer Platform (BAP)
        participant Seller Platform (BPP)
        Buyer Platform (BAP)->>Seller Platform (BPP): confirm
        Seller Platform (BPP)-->>Buyer Platform (BAP):ACK
        Seller Platform (BPP)->>Buyer Platform (BAP):on_confirm
        Buyer Platform (BAP)-->>Seller Platform (BPP): ACK  
  - description: Fulfillment  
    mermaid: >-
      sequenceDiagram
        title Order Fulfillment
        participant Buyer Platform (BAP)
        participant Seller Platform (BPP)
        Buyer Platform (BAP)->>Seller Platform (BPP): status-Request application status
        Seller Platform (BPP)-->>Buyer Platform (BAP):ACK
        Seller Platform (BPP)->>Buyer Platform (BAP):on_status - Provide application status
        Buyer Platform (BAP)-->>Seller Platform (BPP): ACK      
reference: if any
steps:
  - summary: Search for intercity bus
    api: search
    details: 
      - description: Users searches over the network to avail the intercity bus mode of transport based on station code
        mermaid: &search >- 
          sequenceDiagram
            rect rgb(191, 223, 255)
            Buyer Platform (BAP)->>Gateway (BG): search
            Gateway (BG) ->> Buyer Platform (BAP): ACK
            Gateway (BG)->>Registry: Lookup Seller Platforms (lookup)
            Registry->>Gateway (BG): List of Seller Platforms (200 OK)
            Gateway (BG)->>Seller Platform (BPP): search
            Seller Platform (BPP)->>Gateway (BG) : ACK
            end
            Seller Platform (BPP)->>Buyer Platform (BAP): Publish Catalog of Seller 1 (on_search)
            Buyer Platform (BAP)->>Seller Platform (BPP): ACK
    reference: if any
    example:
      $ref: "../../examples/intercity-bus/search/search-start-code.yaml"
  - summary: Return an intercity bus catalog of all fulfillments
    api: on_search
    details: 
      - description: Provider platform sends the catalog of all the service that can be used for transit using bus service based on station code
        mermaid: &onSearch >- 
          sequenceDiagram
            Buyer Platform (BAP)->>Gateway (BG): search
            Gateway (BG) ->> Buyer Platform (BAP): ACK
            Gateway (BG)->>Registry: Lookup Seller Platforms (lookup)
            Registry->>Gateway (BG): List of Seller Platforms (200 OK)
            Gateway (BG)->>Seller Platform (BPP): search
            Seller Platform (BPP)->>Gateway (BG) : ACK
            rect rgb(191, 223, 255)
            Seller Platform (BPP)->>Buyer Platform (BAP): Publish Catalog of Seller 1 (on_search)
            Buyer Platform (BAP)->>Seller Platform (BPP): ACK 
            end
    reference: if any
    example:
      $ref: "../../examples/intercity-bus/on_search/on_search-start.yaml"
  - summary: Search for the bus by start and end station code
    api: search
    details: 
      - description: Users searches over the network to avail the intercity bus mode of transport from one station to another
        mermaid: *search
    reference: if any
    example:
      $ref: "../../examples/intercity-bus/search/search-code-doj.yaml"
  - summary: Return an intercity catalog of all bus services from one station to another
    api: on_search
    details: 
      - description: Provider platform sends the catalog of all the service that can be used for transit using bus from station A to station B
        mermaid: *onSearch 
    reference: if any
    example:
      $ref: "../../examples/intercity-bus/on_search/on_search-doj.yaml" 
  - summary: Search for the specific bus service
    api: search
    details: 
      - description: Users searches over the network to avail the intercity bus mode of transport from one station to another
        mermaid: *search
    reference: if any
    example:
      $ref: "../../examples/intercity-bus/search/search-fulfillment.yaml"
  - summary: Return an intercity specific bus services
    api: on_search
    details: 
      - description: Provider platform sends the catalog of all the service that can be used for transit using bus from station A to station B
        mermaid: *onSearch 
    reference: if any
    example:
      $ref: "../../examples/intercity-bus/on_search/on_search-fulfillment.yaml" 
  - summary: Selection of specific service
    api: select
    details: 
      - description: The end consumer have to select the specific service and would like to have the necesary details
        mermaid: >-
          sequenceDiagram
            participant Buyer Platform (BAP)
            participant Seller Platform (BPP)
            rect rgb(191, 223, 255)
            Buyer Platform (BAP)->>Seller Platform (BPP): select
            Seller Platform (BPP)-->>Buyer Platform (BAP):ACK
            end
            Seller Platform (BPP)->>Buyer Platform (BAP):on_select
            Buyer Platform (BAP)-->>Seller Platform (BPP): ACK
    reference: if any
    example:
      $ref: "../../examples/intercity-bus/select/select.yaml"
  - summary:  Provider platform provides the quote for selected service of bus 
    api: on_select
    details: 
      - description: Provider platform responds with the service detailed information and quotes for the specific service that consumer would like to avail
        mermaid: >-
          sequenceDiagram
            participant Buyer Platform (BAP)
            participant Seller Platform (BPP)
            Buyer Platform (BAP)->>Seller Platform (BPP): select
            Seller Platform (BPP)-->>Buyer Platform (BAP):ACK
            rect rgb(191, 223, 255)
            Seller Platform (BPP)->>Buyer Platform (BAP):on_select
            Buyer Platform (BAP)-->>Seller Platform (BPP): ACK
            end
    reference: if any
    example:
      $ref: "../../examples/intercity-bus/on_select/on_select.yaml" 
  - summary: Consumer platform initializes the order
    api: init
    details: 
      - description: Consumer platform shares the terms of order and initializes the order
        mermaid: >-
          sequenceDiagram
            participant Buyer Platform (BAP)
            participant Seller Platform (BPP)
            rect rgb(191, 223, 255)
            Buyer Platform (BAP)->>Seller Platform (BPP): init
            Seller Platform (BPP)-->>Buyer Platform (BAP):ACK
            end
            Seller Platform (BPP)->>Buyer Platform (BAP):on_init
            Buyer Platform (BAP)-->>Seller Platform (BPP): ACK
    reference: if any
    example:
      $ref: "../../examples/intercity-bus/init/init.yaml"
  - summary: Provider platform accepts/appends the terms of orders
    api: on_init
    details: 
      - description: Provider platform accepts the terms of orders and appends its own terms and responds with the final draft
        mermaid: >-
          sequenceDiagram
            participant Buyer Platform (BAP)
            participant Seller Platform (BPP)
            Buyer Platform (BAP)->>Seller Platform (BPP): init
            Seller Platform (BPP)-->>Buyer Platform (BAP):ACK
            rect rgb(191, 223, 255)
            Seller Platform (BPP)->>Buyer Platform (BAP):on_init
            Buyer Platform (BAP)-->>Seller Platform (BPP): ACK
            end    
    reference: if any
    example:
      $ref: "../../examples/intercity-bus/on_init/on_init.yaml"
  - summary: Consumer confirms the booking and provides details.
    api: confirm
    details: 
      - description: Consumer platform confirms the booking and provides all information required for confirmation as per the terms of order
        mermaid: >-
          sequenceDiagram
            participant Buyer Platform (BAP)
            participant Seller Platform (BPP)
            rect rgb(191, 223, 255)
            Buyer Platform (BAP)->>Seller Platform (BPP): confirm
            Seller Platform (BPP)-->>Buyer Platform (BAP):ACK
            end
            Seller Platform (BPP)->>Buyer Platform (BAP):on_confirm
            Buyer Platform (BAP)-->>Seller Platform (BPP): ACK 
    reference: if any
    example:
      $ref: "../../examples/intercity-bus/confirm/confirm.yaml"
  - summary: Provider platform confirms the order
    api: on_confirm
    details: 
      - description: Provider platform confirms the order and provides details of the journey upon confirmation
        mermaid: >-
          sequenceDiagram
            participant Buyer Platform (BAP)
            participant Seller Platform (BPP)
            Buyer Platform (BAP)->>Seller Platform (BPP): confirm
            Seller Platform (BPP)-->>Buyer Platform (BAP):ACK
            rect rgb(191, 223, 255)
            Seller Platform (BPP)->>Buyer Platform (BAP):on_confirm
            Buyer Platform (BAP)-->>Seller Platform (BPP): ACK
            end
    reference: if any
    example:
      $ref: "../../examples/intercity-bus/on_confirm/on_confirm.yaml"
  - summary: Consumer platform updates the ride details
    api: update
    details: 
      - description: The consumer platform updates the ride with some certain details he wants to be updated.
        mermaid: >-
          sequenceDiagram
            rect rgb(191, 223, 255)
            participant Buyer Platform (BAP)
            participant Seller Platform (BPP)
            Buyer Platform (BAP)->>Seller Platform (BPP): update
            Seller Platform (BPP)-->>Buyer Platform (BAP):ACK
            end
            Seller Platform (BPP)->>Buyer Platform (BAP):on_update
            Buyer Platform (BAP)-->>Seller Platform (BPP): ACK 
    reference: if any
    example:
      $ref: "../../examples/intercity-bus/update/update.yaml"
  - summary: Provider platform provides latest update on the order
    api: on_update
    details: 
      - description: Provider platform provides the ride details with updated context.
        mermaid: >-
          sequenceDiagram
            participant Buyer Platform (BAP)
            participant Seller Platform (BPP)
            Buyer Platform (BAP)->>Seller Platform (BPP): update
            Seller Platform (BPP)-->>Buyer Platform (BAP):ACK
            rect rgb(191, 223, 255)
            Seller Platform (BPP)->>Buyer Platform (BAP):on_update
            Buyer Platform (BAP)-->>Seller Platform (BPP): ACK
            end
    reference: if any
    example:
      $ref: "../../examples/intercity-bus/on_update/on_update_1.yaml"    
  # - summary: Consumer platform requests for latest status
  #   api: status
  #   details: 
  #     - description: Consumer platform request the provider platform to provide with latest order status 
  #   reference: if any
  #   example:
  #     $ref: "../../examples/intercity-bus/status/status.yaml"                          
  # - summary: Provider platform provides latest order status 
  #   api: on_status
  #   details: 
  #     - description: Provider platform provides the updated order status to the consumer
  #   reference: if any
  #   example:
  #     $ref: "../../examples/intercity-bus/on_status/on_status.yaml" 
  # - summary: Consumer platform cancels the request
  #   api: cancel
  #   details: 
  #     - description: Consumer platform request the provider platform to provide with latest order status
  #       mermaid: >-
  #         sequenceDiagram
  #           title Order Fulfillment
  #           participant Buyer Platform (BAP)
  #           participant Seller Platform (BPP)
  #           rect rgb(191, 223, 255)
  #           Buyer Platform (BAP)->>Seller Platform (BPP): status-Request application status
  #           Seller Platform (BPP)-->>Buyer Platform (BAP):ACK
  #           end
  #           Seller Platform (BPP)->>Buyer Platform (BAP):on_status - Provide application status
  #           Buyer Platform (BAP)-->>Seller Platform (BPP): ACK  
  #   reference: if any
  #   example:
  #     $ref: "../../examples/intercity-bus/cancel/cancel.yaml"
  # - summary: Provider platform accepts/appends the terms of cancellation
  #   api: on_cancel
  #   details: 
  #     - description: Provider platform provides the updated order status to the consumer
  #       mermaid: >-
  #         sequenceDiagram
  #           title Order Fulfillment
  #           participant Buyer Platform (BAP)
  #           participant Seller Platform (BPP)
  #           Buyer Platform (BAP)->>Seller Platform (BPP): status-Request application status
  #           Seller Platform (BPP)-->>Buyer Platform (BAP):ACK
  #           rect rgb(191, 223, 255)
  #           Seller Platform (BPP)->>Buyer Platform (BAP):on_status - Provide application status
  #           Buyer Platform (BAP)-->>Seller Platform (BPP): ACK
  #           end 
  #   reference: if any
  #   example:
  #     $ref: "../../examples/intercity-bus/on_cancel/on_cancel.yaml"